apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: demo-svc-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-svc-primary
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: demo-svc-primary
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: demo-svc-canary
        app.kubernetes.io/managed-by: Keptn
        app.kubernetes.io/name: demo-svc-primary
        app.kubernetes.io/part-of: demo
        app.kubernetes.io/version: latest
    spec:
      containers:
      - env:
        - name: DT_CUSTOM_PROP
          value: version=0.1.0 revision=1 releasename=demo-staging-demo-svc keptn_project=demo
            keptn_service=demo-svc keptn_stage=staging keptn_deployment=primary
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['deployment']
        - name: CONTAINER_IMAGE
          value: docker.io/paradoxinversion/containerized-node-app:latest
        - name: KEPTN_PROJECT
          value: demo
        - name: KEPTN_STAGE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KEPTN_SERVICE
          value: demo-svc
        image: docker.io/paradoxinversion/containerized-node-app:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: http
        name: demo-svc
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources: {}
status: {}
